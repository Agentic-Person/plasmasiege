version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n-plasmasiege
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=plasmasiege2024
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - WEBHOOK_URL=http://localhost:5678
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - EXECUTIONS_PROCESS=main
      - EXECUTIONS_MODE=regular
      # Supabase credentials
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      # Solana configuration
      - SOLANA_RPC_URL=${SOLANA_RPC_URL}
      - PLASMA_TOKEN_MINT=${PLASMA_TOKEN_MINT}
      - SHIP_COLLECTION_ADDRESS=${SHIP_COLLECTION_ADDRESS}
      - TREASURY_WALLET_PRIVATE_KEY=${TREASURY_WALLET_PRIVATE_KEY}
      # Unity webhook secret
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/home/node/workflows:ro
    networks:
      - plasmasiege-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: PostgreSQL for n8n database (instead of SQLite)
  postgres:
    image: postgres:15-alpine
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=n8n
      - POSTGRES_NON_ROOT_USER=n8n
      - POSTGRES_NON_ROOT_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - plasmasiege-network
    profiles:
      - with-postgres

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local

networks:
  plasmasiege-network:
    driver: bridge